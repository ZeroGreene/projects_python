#programmer: Zero Greene
#company: Greene Aeration
#compiler: https://www.online-python.com/

#~~~Beginning of code~~~

#~~~~~beginning of def is_prime(n):~~~~~
def is_prime(n):
    if n <= 1: 
        return False #2 is the smallest prime integer so anything lower is automatically labelled not prime

    for i in range(2, int(n ** 0.5) + 1):
        #the range is for divisors for the test
        #n ** 0.5 gets the square root, so the int converts the answer to an integer, the +1 because python loops are exclusive
        #+1 is added because range() in Python is exclusive at the end.
        #so end of the divisor hunt is = 2, through all the integers up to and including the square root

        #now we test the user inputted number vs created divisor range, if any of them come back with a remainder of 0 it is not a prime number
        if n % i == 0: 
            return False #if no remainder, its not a prime number

    return True #it passed all of our current tests, so we're labelling it prime

#~~~~~end of def is_prime(n):~~~~~

#~~~~~Beginning of main program loop~~~~

while True:

    #asking for input and putting it in a variable
    user_input = input("Please type a number to check if it's prime, enter to compute. Type 'exit' to quit: ") 

    #if they enter the quit/exit word
    if user_input.lower() == 'exit':
        print("Thanks for stopping by")
        break

    #response if the input is not a positive integer
    if not user_input.isdigit():
        print("Please enter a valid positive integer.")
        continue #goes to the next step in the loop, in this case asking for input again

    num = int(user_input) #It converts the input string from the user (which is always a string by default) into an integer.

#~~Beginning of outputs~~
    if is_prime(num):
        print(f"{num} is a prime number.") #The f before the string stands for formatted string literal, or f-string, and it's used to embed variables or expressions inside a string.
    else:
        print(f"{num} is not a prime number.")
#~~End of outputs~~

#~~~~~End of main program loop~~~~

#~~~End of code~~~
